QUESTIONS:

1/- C'est quoi Git ?
	Git est un outil gestionnaire de versions

2/- C'est quoi un repository git ?
	un repository git est un repertoire distant de stockage de projet 

3/- Quelle commande faut t il écrire pour valider un ajout dans un repertoire git ?
	git commit -m "commentaire_modification"

4/- que fait la commande git push ?
	elle permet d'envoyer les modifications effectue en local sur le serveur disant

5/- quel est l'avantage de git par rapport à svn?
	git est decentralise tandis que svn est centralise

6/- c'est quoi la commande git stash ?
	git stash permet de mettre de cote son travail et de recuperer le repertoire distant

7/- c'est quoi la commande git branch ?
	git branch permet de lister les differentes branches

8/- c'est quoi la commande git clone ?
	git clone permet de recuperer le repository sur le serveur distant

9/-c'est quoi la commande git config ?
	git config permet de mettre les identifiants de git en local

10/- c'est quoi la commande git init ?
	git init permet de rendre un repertoire local utilisable par git

11/- c'est quoi un conflit git ?
	il y a conflit git lorsqu'on tente de fusionner deux versions differentes d'un meme fichier

12/- comment resoudre un conflit git ?
	- choix la version du fichier la plus adapte

13/- c'est quoi la commande git remote ?
	git remote permet de se conecter au repertoire distant

14/- quelle est la différence entre git remote et git clone ?
	git remote se connecte au repertoire distant alors que git clone recupere en local le repertoire distant

15/- c'est quoi la commande git status ?
	git status permet de voir l'etat de mon repertoire

16/- c'est quoi la commande git checkout ?
	git checkout permet de basculer d'une branche a une autre

17/- c'est quoi la commande git log ?
	git log permet de voir l'ensemble des commit effectues

18/- donner la suite de commandes à écrire pour envoyer un fichier sur un repository distant
	git add .			=>	ajouter les fichiers
	git commit -m "ajout fichier"	=>	valider les ajouts
	git push origin master		=>	envoyer vers le repository distant

19/- c'est quoi github ?
	github est un serveur git en ligne

20/- citer 3 avantages d'utiliser git dans un projet
	- travail en equipe
	- partage des taches dans les equipes
	- travail a distance
	- coherence dans le travail	

21/- c'est quoi le fichier .gitignore
	le fichier .gitignore permet d'interdire l'envoie de certains fichiers ou repertoire dans git

22/- quelles sont les étapes permettant de lier un projet git local à github?
	- git init
	- git remote add origin master

23/- quel est le role des branches sur git ?
	les branches permettent de travailler sur plusieurs differentes versions du projet de facon independante

24/- c'est quoi un conflit git?

25/- comment resoudre un conflit sur git ?

LE BONCOIN:

UML
---
 Personne 1-----------* Annonce
 personneId             idAnnonce 
 nom                    intitule
 prenom                 detail
 login                  prix
 motDePasse
 dateNaissance   

 - créer un projet java : Ensup-Master1-tp2-Nom-Prenom
 - configurer le git/github avec un projet java et rajouter serviceshuios en collaborateur
 
 Metier:
--------
 Personne
 Annonce
 
 Iservice:
----------
  //Crud Personne
 public int creerPersonne(List<Personne> list, Personne personne)
 public Personne getPersonne(List<Personne> list,int idPersonne)
 public void deletePersonne(List<Personne> list,int idPersonne)
 public void updatePersonne(List<Personne> list,Personne p, String nom, String prenom, Date dateNaissance)
 public List<Personne> findAllPersonnes()
 public int getPersonneId(List<Personne> list,Personne p)
 public void affichePersonnes();
 public void afficheAnnoncesPersonne(Personne p)
 //Crud Annonce
 public int creerAnnonce(Personne personne, Annonce a)
 public Annonce getAnnonce(Personne personne,int idAnnonce)
 public void deleteAnnonce(Personne personne,int idAnnonce)
 public void updateAnnonce(Personne personne,Annonce a)
 public List<Annonce> findAllAnnonce(Personne personne)

ServiceImpl
-----------
implementation de l'interface
utiliser un tableau de Personne pour office de stockage des données
public static List<Personne> base = new ArrayList<Personne>();

Lanceur
-------
Tester chaque méthode

A la fin (17h00) au plus tard pusher son code sur github  
